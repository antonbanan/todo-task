version: "3.3"

networks:
  web: null

  local:
    ipam:
      config:
      - subnet: 172.24.0.0/24

volumes:
  pgdata:
  mono-node-modules: null

services:
  ################################################
  ####        Traefik Proxy Setup           #####
  ###############################################
  traefik:
    image: traefik:v2.0
    restart: always
    container_name: traefik
    ports:
      - "80:80" # <== http
      - "8080:8080" # <== :8080 is where the dashboard runs on
      - "443:443" # <== https
      - "2222:22" # <== sftp
      # - "${API_PORT}:${API_PORT}" # <== api port
    command:
    #### These are the CLI commands that will configure Traefik and tell it how to work! ####
      ## API Settings - https://docs.traefik.io/operations/api/, endpoints - https://docs.traefik.io/operations/api/#endpoints ##
      - --api.insecure=true # <== Enabling insecure api, NOT RECOMMENDED FOR PRODUCTION
      - --api.dashboard=true # <== Enabling the dashboard to view services, middlewares, routers, etc...
      - --api.debug=true # <== Enabling additional endpoints for debugging and profiling
      ## Log Settings (options: ERROR, DEBUG, PANIC, FATAL, WARN, INFO) - https://docs.traefik.io/observability/logs/ ##
      - --log.level=DEBUG # <== Setting the level of the logs from traefik
      ## Provider Settings - https://docs.traefik.io/providers/docker/#provider-configuration ##
      - --providers.docker=true # <== Enabling docker as the provider for traefik
      - --providers.docker.exposedbydefault=false # <== Don't expose every container to traefik, only expose enabled ones
      - --providers.file.filename=/dynamic.yaml # <== Referring to a dynamic configuration file
      - --providers.docker.network=todo-project_web # <== Operate on the docker network named web (traefic network)
      ## Entrypoints Settings - https://docs.traefik.io/routing/entrypoints/#configuration ##
      - --entrypoints.web.address=:80 # <== Defining an entrypoint for port :80 named web
      - --entrypoints.web-secured.address=:443 # <== Defining an entrypoint for https on port :443 named web-secured
      - --entrypoints.ftp-secured.address=:22 # <== Defining an entrypoint for ftp on port :22 named ftp
      # - --entrypoints.api-secured.address=:${API_PORT} # <== Defining an entrypoint for https on port :3200 named api-secured
      ## Certificate Settings (Let's Encrypt) -  https://docs.traefik.io/https/acme/#configuration-examples ##
      - --certificatesresolvers.mytlschallenge.acme.tlschallenge=true # <== Enable TLS-ALPN-01 to generate and renew ACME certs
      - --certificatesresolvers.mytlschallenge.acme.email=antbongen@gmail.com # <== Setting email for certs
      - --certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json # <== Defining acme file to store cert information
    volumes:
      - ./letsencrypt:/letsencrypt # <== Volume for certs (TLS)
      - /var/run/docker.sock:/var/run/docker.sock # <== Volume for docker admin
      - ./dynamic.yaml:/dynamic.yaml # <== Volume for dynamic conf file, **ref: line 27
    networks:
      - web # <== Placing traefik on the network named web, to access containers on this network
    labels:
    #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true" # <== Enable traefik on itself to view dashboard and assign subdomain to view it
      - "traefik.http.routers.api.rule=Host(`monitor.localhost`)" # <== Setting the domain for the dashboard
      - "traefik.http.routers.api.service=api@internal" # <== Enabling the api to be a service to access

  #########################################################
  ###         Site Setup Container  use traefic       #####
  #########################################################

  frontend: #frontend server
    container_name: frontend
    image: todo-front:docker
    networks:
      web: null
      local:
        ipv4_address: 172.24.0.7
    ports:
      - "3000:3000"


  # frontend: #frontend server
  #   container_name: frontend
  #   extends:
  #     file: docker-compose.base.yml
  #     service: nx-app-base
  #   command: npm run todo-front:dev:docker
  #   depends_on:
  #     - backend
  #   networks:
  #     web: null
  #     local:
  #       ipv4_address: 172.24.0.7
  #   ports:
  #     - "4200:4200"


    labels:
   
      #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true" # <== Enable traefik to proxy this container
      - "traefik.docker.network=todo-project_web" # nazvanie seti traefic + nazvanie papki proekta
      - "traefik.http.routers.nginx-web.rule=Host(`app.localhost`)" # <== Your Domain Name goes here for the http rule
      - "traefik.http.routers.nginx-web.entrypoints=web" # <== Defining the entrypoint for http, **ref: line 30
      
      # # create redirect-https middleware via label
      - "traefik.http.middlewares.redirect-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-https.redirectscheme.permanent=true"
      # set redirect-https middleware to api-http router. @docker suffix is optional, as @file it just points to the source of configuration (can be docker label, file, k8s, etc)
      # - "traefik.http.routers.nginx-web.middlewares=redirect-https@docker"      
      
      - "traefik.http.routers.nginx-secured.rule=Host(`app.localhost`)" # <== Your Domain Name for the https rule 
      - "traefik.http.routers.nginx-secured.entrypoints=web-secured" # <== Defining entrypoint for https, **ref: line 31
      - "traefik.http.routers.nginx-secured.tls.certresolver=mytlschallenge" # <== Defining certsresolvers for https
  
  backend: #backend server
    container_name: backend
    image: todo-app:docker
    ports:
      - "3200:3200"
    depends_on:
      - db
    networks:
      web: null
      local:
        ipv4_address: 172.24.0.12
    labels:
      #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true" # <== Enable traefik to proxy this container
      - "traefik.docker.network=todo-project_web" # nazvanie seti traefic + nazvanie papki proekta!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      - "traefik.http.routers.api-web.rule=Host(`api.localhost`)" # <== Your Domain Name goes here for the http rule
      - "traefik.http.routers.api-web.entrypoints=web-secured" # <== Defining the entrypoint for http, **ref: line 30
      - "traefik.http.routers.api-web.tls.certresolver=mytlschallenge" # <== Defining certsresolvers for https

   

 #############################################
 ###     DB Container not on traefik      ####
 #############################################

  db:
    container_name: mongo-db
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    networks:
      local:
        ipv4_address: 172.24.0.10
    # volumes:
    #   - pgdata:/var/lib/postgresql/data/
  
  